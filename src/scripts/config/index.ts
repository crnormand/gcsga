import { ActionType, DOCUMENTS, ItemType } from "@module/data/constants.ts"
import { ItemInst } from "@module/data/item/helpers.ts"
import * as ActionInstance from "@module/data/action/index.ts"

const tokenHUDConditions = {
	crouching: "gurps.status.crouching",
	kneeling: "gurps.status.kneeling",
	sitting: "gurps.status.sitting",
	crawling: "gurps.status.crawling",
	prone: "gurps.status.prone",
	reeling: "gurps.status.reeling",
	fatigued: "gurps.status.fatigued",
	crippled: "gurps.status.crippled",
	bleeding: "gurps.status.bleeding",
	dead: "gurps.status.dead",
	shock: "gurps.status.shock",
	pain: "gurps.status.pain",
	unconscious: "gurps.status.unconscious",
	sleeping: "gurps.status.sleeping",
	comatose: "gurps.status.comatose",
	stun: "gurps.status.stun",
	"mental-stun": "gurps.status.mental-stun",
	poisoned: "gurps.status.poisoned",
	burning: "gurps.status.burning",
	cold: "gurps.status.cold",
	disarmed: "gurps.status.disarmed",
	falling: "gurps.status.falling",
	grappled: "gurps.status.grappled",
	restrained: "gurps.status.restrained",
	pinned: "gurps.status.pinned",
	sprinting: "gurps.status.sprinting",
	flying: "gurps.status.flying",
	stealthy: "gurps.status.stealthy",
	waiting: "gurps.status.waiting",
	invisible: "gurps.status.invisible",
	coughing: "gurps.status.coughing",
	retching: "gurps.status.retching",
	nausea: "gurps.status.nausea",
	agony: "gurps.status.agony",
	seizure: "gurps.status.seizure",
	blind: "gurps.status.blind",
	deafened: "gurps.status.deafened",
	silenced: "gurps.status.silenced",
	choking: "gurps.status.choking",
	"heart-attack": "gurps.status.heart-attack",
	euphoric: "gurps.status.euphoric",
	hallucinating: "gurps.status.hallucinating",
	drunk: "gurps.status.drunk",
	drowsy: "gurps.status.drowsy",
	dazed: "gurps.status.dazed",
}

const tokenHUDManeuvers = {
	"do-nothing": "gurps.maneuver.do-nothing",
	attack: "gurps.maneuver.attack",
	"all-out-attack": "gurps.maneuver.all-out-attack",
	"all-out-defense": "gurps.maneuver.all-out-defense",
	move: "gurps.maneuver.move",
	"move-and-attack": "gurps.maneuver.move-and-attack",
	"all-out-attack-double": "gurps.maneuver.all-out-attack-double",
	"all-out-defense-double": "gurps.maneuver.all-out-defense-double",
	"change-posture": "gurps.maneuver.change-posture",
	feint: "gurps.maneuver.feint",
	"all-out-attack-feint": "gurps.maneuver.all-out-attack-feint",
	"all-out-defense-dodge": "gurps.maneuver.all-out-defense-dodge",
	ready: "gurps.maneuver.ready",
	evaluate: "gurps.maneuver.evaluate",
	"all-out-attack-determined": "gurps.maneuver.all-out-attack-determined",
	"all-out-defense-parry": "gurps.maneuver.all-out-defense-parry",
	concentrate: "gurps.maneuver.concentrate",
	aim: "gurps.maneuver.aim",
	"all-out-attack-strong": "gurps.maneuver.all-out-attack-strong",
	"all-out-defense-block": "gurps.maneuver.all-out-defense-block",
	wait: "gurps.maneuver.wait",
	"blank-1": "gurps.maneuver.blank-1",
	"all-out-attack-suppressing-fire": "gurps.maneuver.all-out-attack-suppressing-fire",
	"blank-2": "gurps.maneuver.blank-2",
}

export const GURPSCONFIG = {
	skillDefaults: [] as ItemInst<ItemType.Skill>[],

	statusEffects: {
		conditions: tokenHUDConditions,
		maneuvers: tokenHUDManeuvers,
	},

	[DOCUMENTS.ACTION]: {
		dataModels: {
			[ActionType.AttackMelee]: ActionInstance.AttackMelee,
			[ActionType.AttackRanged]: ActionInstance.AttackRanged,
			[ActionType.Heal]: ActionInstance.ActionHeal,
			[ActionType.Utility]: ActionInstance.ActionUtility,
		},
	},

	// select: {
	// 	cr_level: {},
	// 	cr_adj: {},
	// 	study: {},
	// 	study_level: {},
	// 	attribute: {},
	// 	progression: {},
	// 	numeric_criteria: {},
	// 	numeric_criteria_strict: {},
	// 	string_criteria: {},
	// 	has: {},
	// 	all: {},
	// 	tmcost: {},
	// 	emcost: {},
	// 	emweight: {},
	// 	wsel: {},
	// 	skillsel: {},
	// 	spellcmp: {},
	// 	spellmatch: {},
	// 	stlimit: {},
	// 	stdmg: {},
	// 	movelimit: {},
	// 	feature: {},
	// 	feature_strict: {},
	// 	prereq: {},
	// 	prereq_strict: {},
	// 	difficulty: {},
	// 	container: {},
	// 	affects: {},
	// 	percentage: {},
	// 	maneuvers: {},
	// 	postures: {},
	// 	display: {},
	// 	length_units: {},
	// 	weight_units: {},
	// 	move_override: {},
	// 	wswitch: {},
	// 	wswitch_value: {},
	// 	color: {},
	// 	effect_action: {},
	// 	conditions: {},
	// 	duration_type: {},
	// } as Record<string, Record<string, string>>,

	// meleeModsb [] as ModifierItem[],
	// rangedMods: [] as ModifierItem[],
	// defenseMods: [] as ModifierItem[],
	// commonMods: [] as { title: string; items: ModifierItem[]; open?: boolean }[],
	// allMods: [] as ModifierItem[],
}
